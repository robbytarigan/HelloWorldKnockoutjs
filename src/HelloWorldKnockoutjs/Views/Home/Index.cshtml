@model HelloWorldKnockoutjs.Models.Meal

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";    
}


@using (Html.BeginForm()) {

<h2>Home</h2>
    
<p>On postback you have chosen @Html.DisplayTextFor(m=> m.Name) </p>    

<h3>Meal upgrades</h3>
<p>Make your flight more bearable by selecting a meal to match your social and economic status.</p>
@Html.LabelFor(m=> m.Name, "Chosen meal:")        
<select data-bind="options: availableMeals,                                 
                                optionsText: 'mealName',                                
                                value: chosenMeal"></select>            
<input id="Name" name="Name" type="hidden" data-bind="value: chosenMeal().mealName" />
    
<p>    
    You've chosen:     <b data-bind="text: chosenMeal().description"></b>    (price: <span data-bind='text: formatPrice(chosenMeal().extraCost)'></span>)
</p>

<p>
    <button data-bind="enable: count < 5">Add</button>
</p>
    
    
<p>
    There are <span data-bind="text: count"></span> available meals.
</p>     
    
        
    <p>
        <input type="submit" value="Submit" />
    </p>
}


<script type="text/javascript">
    function formatPrice(price) {
        return price == 0 ? "Free" : "$" + price.toFixed(2); 
    }

    var availableMeals = [
        { mealName: 'Standard', description: 'Dry crusts of bread', extraCost: 0 },
        { mealName: 'Premium', description: 'Fresh bread with cheese', extraCost: 9.95 },
        { mealName: 'Deluxe', description: 'Caviar and vintage Dr Pepper', extraCost: 18.50 },
        { mealName: 'Super', description: 'Thai curry and wine', extraCost: 20.34 }
    ];

    var viewModel = {
        chosenMeal: ko.observable(availableMeals[0]),
        count: availableMeals.length
    };

    ko.applyBindings(viewModel); // Makes Knockout get to work
</script>

